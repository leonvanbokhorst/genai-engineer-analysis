import os
import pandas as pd
from pathlib import Path

WORKSPACE_DIR = Path(__file__).resolve().parent.parent
ANALYSIS_DIR = WORKSPACE_DIR / "data" / "analysis_results"
OUTPUT_MD = WORKSPACE_DIR / "REPORT.md"


def load_table(path: Path, max_rows: int = 20) -> str:
    if not path.exists():
        return "(missing)"
    try:
        df = pd.read_csv(path)
        return df.head(max_rows).to_markdown(index=False)
    except Exception as exc:
        return f"(failed to load: {exc})"


def main():
    ANALYSIS_DIR.mkdir(parents=True, exist_ok=True)

    profile_distribution = "data/analysis_results/profile_distribution.png"
    category_type_distribution = "data/analysis_results/category_type_distribution.png"
    job_task_distribution = "data/analysis_results/job_task_distribution.png"
    job_task_jobs_distribution = "data/analysis_results/job_task_jobs_distribution.png"
    technology_distribution = "data/analysis_results/technology_distribution.png"
    soft_skill_distribution = "data/analysis_results/soft_skill_distribution.png"
    focus_distribution = "data/analysis_results/focus_distribution.png"

    top_tools_overall = ANALYSIS_DIR / "top_tools_overall.csv"
    top_tools_by_profile = ANALYSIS_DIR / "top_tools_by_profile.csv"

    md = [
        "## GenAI/ML Engineer Job Market Analysis Report",
        "",
        "This report summarizes the CAIN-style metrics generated by the automated pipeline.",
        "",
        "### Profile Distribution",
    ]
    md.append(f"![Profile Distribution]({profile_distribution})")
    md.append("")

    md.append("### Category Types")
    md.append(f"![Category Types]({category_type_distribution})")
    md.append("")

    md.append("### Job Tasks (Phrase-level)")
    md.append(f"![Job Tasks (Phrases)]({job_task_distribution})")
    md.append("")
    md.append("### Job Tasks (Per-job Coverage)")
    md.append(f"![Job Tasks (Jobs)]({job_task_jobs_distribution})")
    md.append("")

    md.append("### Technologies")
    md.append(f"![Technologies]({technology_distribution})")
    md.append("")

    md.append("### Soft Skills")
    md.append(f"![Soft Skills]({soft_skill_distribution})")
    md.append("")

    md.append("### Focus per Job (RQ1b)")
    md.append(f"![Focus per Job]({focus_distribution})")
    md.append("")

    # Tables
    md.append("### Top Tools Overall (per Technology Family)")
    md.append("")
    md.append(load_table(top_tools_overall, max_rows=30))
    md.append("")

    md.append("### Top Tools by Profile (per Technology Family)")
    md.append("")
    md.append(load_table(top_tools_by_profile, max_rows=40))
    md.append("")

    OUTPUT_MD.write_text("\n".join(md), encoding="utf-8")
    print(f"Report written to: {OUTPUT_MD}")


if __name__ == "__main__":
    main()
