{
    "job_id": 1019,
    "job_details": {
        "job_id": 1019,
        "Organisatienaam": "Siemens",
        "Type adverteerder": "Directe werkgever",
        "Vacaturetitel": "C++ Software Engineer - Automation & AI",
        "Standplaats": "Weert",
        "Vacaturelink (origineel)": "nationalmssociety.org",
        "Contactpersoon": null,
        "Telefoonnummer": null,
        "E-mail": null,
        "Beroep": "Programmeur C, C++ (m/v/x)",
        "Opleidingsniveau": "WO",
        "Jobfeed feedbacklink": "Meld fout",
        "Functieomschrijving": "* Designing, developing, modifying, and maintaining NX CAM software.\n     * Conducting research, design, prototyping, and other exploratory activities.\n     * Creating and testing feature components as well as ensuring software quality through unit and system-level testing.\n     * Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests.\n     * Utilising paired programming and other practices for frequent code review.\n     * Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment.\n     * Applying best practices in coding, design, and implementation to build high-quality components and solutions.\n     * Leveraging team expertise while sharing knowledge for the team's future benefit.",
        "Datum gevonden": "2024-11-29",
        "Beroepsgroep": "Programmeurs",
        "Beroepsklasse": "Informatie- en communicatietechnologie",
        "Contracttype": "Vast contract",
        "Parttime / fulltime": "Fulltime (> 32 uur)",
        "Branche": "Industrie / Techniek",
        "Organisatiegrootte": "1000+",
        "Jaar (van datum gevonden)": 2024,
        "Maand (van datum gevonden)": 11,
        "full_text": "C++ Software Engineer - Automation & AI\n\n* Designing, developing, modifying, and maintaining NX CAM software.\n     * Conducting research, design, prototyping, and other exploratory activities.\n     * Creating and testing feature components as well as ensuring software quality through unit and system-level testing.\n     * Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests.\n     * Utilising paired programming and other practices for frequent code review.\n     * Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment.\n     * Applying best practices in coding, design, and implementation to build high-quality components and solutions.\n     * Leveraging team expertise while sharing knowledge for the team's future benefit."
    },
    "analysis": {
        "profile_classification": {
            "profile": "Ambiguous",
            "rationale": "The job description focuses heavily on traditional C++ software engineering tasks, including software design, development, testing, and maintenance of a specific software (NX CAM). While it mentions 'AI' in the title, the core responsibilities and tasks described do not involve the development, fine-tuning, or deployment of AI models, nor do they utilize AI frameworks or generative models. The tasks are primarily related to software development and component creation, not AI-specific engineering."
        },
        "thematic_analysis": {
            "job_tasks": [
                {
                    "category": "TASK4: Software Development",
                    "justification": "The description details designing, developing, modifying, and maintaining software (NX CAM), creating and testing feature components, and applying best practices in coding, design, and implementation. This aligns directly with traditional software engineering responsibilities.",
                    "phrase": "Designing, developing, modifying, and maintaining NX CAM software."
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Activities like research, design, and prototyping are foundational to software development, especially when exploring new features or functionalities.",
                    "phrase": "Conducting research, design, prototyping, and other exploratory activities."
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Creating and testing software components, along with ensuring software quality through unit and system-level testing, are core software development practices.",
                    "phrase": "Creating and testing feature components as well as ensuring software quality through unit and system testing."
                },
                {
                    "category": "TASK1: Business Understanding",
                    "justification": "Collaborating with a Product Owner to build and refine user stories and acceptance tests demonstrates an understanding of business requirements and translating them into technical tasks.",
                    "phrase": "Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests."
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Utilising paired programming and frequent code review are established software development practices aimed at improving code quality and knowledge sharing.",
                    "phrase": "Utilising paired programming and other practices for frequent code review."
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "justification": "Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment are key aspects of team collaboration and communication.",
                    "phrase": "Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment."
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Applying best practices in coding, design, and implementation is a fundamental aspect of building high-quality software components and solutions.",
                    "phrase": "Applying best practices in coding, design, and implementation to build high-quality components and solutions."
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "justification": "Leveraging team expertise while sharing knowledge for the team's future benefit highlights collaboration and knowledge transfer within a team.",
                    "phrase": "Leveraging team expertise while sharing knowledge for the team's future benefit."
                }
            ],
            "soft_skills": [
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests."
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Utilising paired programming and other practices for frequent code review."
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment."
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Leveraging team expertise while sharing knowledge for the team's future benefit."
                }
            ],
            "technologies": [
                {
                    "category": "TECH1: Programming Languages",
                    "phrase": "C++"
                }
            ]
        }
    }
}