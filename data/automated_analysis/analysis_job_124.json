{
    "job_id": 124,
    "job_details": {
        "job_id": 124,
        "Organisatienaam": "HNM Solutions",
        "Type adverteerder": "Intermediair",
        "Vacaturetitel": "Senior Linux Engineer",
        "Standplaats": "Den Haag",
        "Vacaturelink (origineel)": "glassdoor.nl",
        "Contactpersoon": null,
        "Telefoonnummer": null,
        "E-mail": null,
        "Beroep": "Linux engineer (m/v/x)",
        "Opleidingsniveau": "Onbekend",
        "Jobfeed feedbacklink": "Meld fout",
        "Functieomschrijving": "We are looking for an adept Linux engineer to help our organisation (and our developers) build and professionalise our Linux environment.\n\n   You will also be involved in:\n\n   - Modelling CI/CD deployment\n\n   - Writing and managing Puppet roles and Ansible playbooks\n\n   - Acting in a DevOps team (together with other developers, a product owner, scrum master and QA Engineer)\n\n   As a Linux engineer, you will be responsible for:\n\n   - Creating designs and models\n\n   - Retrieving user needs / problem statements\n\n   - Detailing the functional requirements and user stories into various deliverables.\n\n   - Taking more junior Linux engineers on board and training them.\n\n   - Contributing to the functional testing of delivered software.\n\n   - Evaluating designs with key users, stakeholders and end users.\n\n   In addition, you deliver:\n\n   - (Detail) designs (depending on the assignment ranging from wireframe to interactive prototype)\n\n   - Automation and patching in AWX\n\n   - Automation and implementation of RHEL, RedHat, IPA, Ansible, Puppet, VMWare, NSX-T LVM, PKI, NFS\n\n   From your role as Linux engineer, you communicate frequently and frequently with:\n\n   - With the PO, key users, stakeholders and end users about functional requirements and user stories\n\n   - With the Teamlead about the functional content, usability and progress of the work package and about test results.",
        "Datum gevonden": "2023-05-09",
        "Beroepsgroep": "Systeemontwikkelaars en -analisten",
        "Beroepsklasse": "Informatie- en communicatietechnologie",
        "Contracttype": "Vast contract",
        "Parttime / fulltime": "Fulltime (> 32 uur)",
        "Branche": "Arbeidsbemiddeling",
        "Organisatiegrootte": "Onbekend",
        "Jaar (van datum gevonden)": 2023,
        "Maand (van datum gevonden)": 5,
        "full_text": "Senior Linux Engineer\n\nWe are looking for an adept Linux engineer to help our organisation (and our developers) build and professionalise our Linux environment.\n\n   You will also be involved in:\n\n   - Modelling CI/CD deployment\n\n   - Writing and managing Puppet roles and Ansible playbooks\n\n   - Acting in a DevOps team (together with other developers, a product owner, scrum master and QA Engineer)\n\n   As a Linux engineer, you will be responsible for:\n\n   - Creating designs and models\n\n   - Retrieving user needs / problem statements\n\n   - Detailing the functional requirements and user stories into various deliverables.\n\n   - Taking more junior Linux engineers on board and training them.\n\n   - Contributing to the functional testing of delivered software.\n\n   - Evaluating designs with key users, stakeholders and end users.\n\n   In addition, you deliver:\n\n   - (Detail) designs (depending on the assignment ranging from wireframe to interactive prototype)\n\n   - Automation and patching in AWX\n\n   - Automation and implementation of RHEL, RedHat, IPA, Ansible, Puppet, VMWare, NSX-T LVM, PKI, NFS\n\n   From your role as Linux engineer, you communicate frequently and frequently with:\n\n   - With the PO, key users, stakeholders and end users about functional requirements and user stories\n\n   - With the Teamlead about the functional content, usability and progress of the work package and about test results."
    },
    "analysis": {
        "profile_classification": {
            "profile": "Ambiguous",
            "rationale": "The job description focuses heavily on Linux system administration, CI/CD, and DevOps practices, with no mention of AI, machine learning, or generative models. The tasks described, such as managing Linux environments, writing automation scripts, and detailing functional requirements, do not align with the core responsibilities of an ML Engineer or GenAI Engineer. Therefore, it falls under the 'Ambiguous' category as it is not an AI-related technical role."
        },
        "thematic_analysis": {
            "job_tasks": [
                {
                    "category": "TASK4: Software Development",
                    "justification": "The description mentions 'Modelling CI/CD deployment', 'Writing and managing Puppet roles and Ansible playbooks', and 'Contributing to the functional testing of delivered software', which are all related to the development and deployment lifecycle of software systems.",
                    "phrase": "Modelling CI/CD deployment"
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Writing and managing configuration management tools like Puppet and Ansible is a core software development practice for infrastructure automation.",
                    "phrase": "Writing and managing Puppet roles and Ansible playbooks"
                },
                {
                    "category": "TASK5: Operations Engineering (MLOps)",
                    "justification": "The role explicitly states acting in a 'DevOps team', which directly aligns with the principles and practices of Operations Engineering.",
                    "phrase": "Acting in a DevOps team"
                },
                {
                    "category": "TASK1: Business Understanding",
                    "justification": "Retrieving user needs and problem statements is a key aspect of understanding the business context and translating it into technical requirements.",
                    "phrase": "Retrieving user needs / problem statements"
                },
                {
                    "category": "TASK1: Business Understanding",
                    "justification": "Detailing functional requirements and user stories is a direct translation of business needs into actionable technical tasks.",
                    "phrase": "Detailing the functional requirements and user stories into various deliverables."
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Creating designs and models, and delivering (Detail) designs, including interactive prototypes, are part of the software development process.",
                    "phrase": "Creating designs and models"
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Delivering (Detail) designs, ranging from wireframe to interactive prototype, falls under the scope of software development.",
                    "phrase": "(Detail) designs (depending on the assignment ranging from wireframe to interactive prototype)"
                },
                {
                    "category": "TASK5: Operations Engineering (MLOps)",
                    "justification": "Automation and patching in AWX is a direct application of operations engineering practices for managing and maintaining systems.",
                    "phrase": "Automation and patching in AWX"
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Automation and implementation of various technologies like RHEL, Ansible, Puppet, VMWare, etc., are core to building and maintaining robust software environments.",
                    "phrase": "Automation and implementation of RHEL, RedHat, IPA, Ansible, Puppet, VMWare, NSX-T LVM, PKI, NFS"
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "justification": "Communicating frequently with PO, key users, stakeholders, and end users about functional requirements and user stories demonstrates strong communication skills.",
                    "phrase": "With the PO, key users, stakeholders and end users about functional requirements and user stories"
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "justification": "Communicating with the Teamlead about functional content, usability, progress, and test results highlights collaborative communication.",
                    "phrase": "With the Teamlead about the functional content, usability and progress of the work package and about test results."
                }
            ],
            "soft_skills": [
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Communicating frequently and frequently with the PO, key users, stakeholders and end users about functional requirements and user stories"
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Communicating with the Teamlead about the functional content, usability and progress of the work package and about test results."
                },
                {
                    "category": "SKILL3: Problem Solving & Pragmatism",
                    "phrase": "Creating designs and models"
                },
                {
                    "category": "SKILL3: Problem Solving & Pragmatism",
                    "phrase": "Retrieving user needs / problem statements"
                },
                {
                    "category": "SKILL5: Innovation & Ownership",
                    "phrase": "Taking more junior Linux engineers on board and training them."
                }
            ],
            "technologies": [
                {
                    "category": "TECH6: MLOps & Data Pipelines",
                    "phrase": "CI/CD"
                },
                {
                    "category": "TECH6: MLOps & Data Pipelines",
                    "phrase": "Puppet"
                },
                {
                    "category": "TECH6: MLOps & Data Pipelines",
                    "phrase": "Ansible"
                },
                {
                    "category": "TECH1: Programming Languages",
                    "phrase": "Linux"
                },
                {
                    "category": "TECH2: Cloud Platforms & Services",
                    "phrase": "AWX"
                },
                {
                    "category": "TECH1: Programming Languages",
                    "phrase": "RHEL"
                },
                {
                    "category": "TECH1: Programming Languages",
                    "phrase": "RedHat"
                },
                {
                    "category": "TECH6: MLOps & Data Pipelines",
                    "phrase": "VMWare"
                },
                {
                    "category": "TECH6: MLOps & Data Pipelines",
                    "phrase": "NSX-T"
                },
                {
                    "category": "TECH8: Data Processing",
                    "phrase": "LVM"
                },
                {
                    "category": "TECH6: MLOps & Data Pipelines",
                    "phrase": "PKI"
                },
                {
                    "category": "TECH9: Data Storage",
                    "phrase": "NFS"
                }
            ]
        }
    }
}