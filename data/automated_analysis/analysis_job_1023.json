{
    "job_id": 1023,
    "job_details": {
        "job_id": 1023,
        "Organisatienaam": "Siemens",
        "Type adverteerder": "Directe werkgever",
        "Vacaturetitel": "Senior C++ Software Engineer - NXCAM",
        "Standplaats": "Breda",
        "Vacaturelink (origineel)": "nationalmssociety.org",
        "Contactpersoon": null,
        "Telefoonnummer": null,
        "E-mail": null,
        "Beroep": "Programmeur C, C++ (m/v/x)",
        "Opleidingsniveau": "WO",
        "Jobfeed feedbacklink": "Meld fout",
        "Functieomschrijving": "* Designing, developing, modifying, and maintaining NX CAM software.\n     * Conducting research, design, prototyping, and other exploratory activities.\n     * Creating and testing feature components as well as ensuring software quality through unit and system-level testing.\n     * Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests.\n     * Utilising paired programming and other practices for frequent code review.\n     * Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment.\n     * Applying best practices in coding, design, and implementation to build high-quality components and solutions.\n     * Leveraging team expertise while sharing knowledge for the team's future benefit.",
        "Datum gevonden": "2025-01-15",
        "Beroepsgroep": "Programmeurs",
        "Beroepsklasse": "Informatie- en communicatietechnologie",
        "Contracttype": "Vast contract",
        "Parttime / fulltime": "Fulltime (> 32 uur)",
        "Branche": "Industrie / Techniek",
        "Organisatiegrootte": "1000+",
        "Jaar (van datum gevonden)": 2025,
        "Maand (van datum gevonden)": 1,
        "full_text": "Senior C++ Software Engineer - NXCAM\n\n* Designing, developing, modifying, and maintaining NX CAM software.\n     * Conducting research, design, prototyping, and other exploratory activities.\n     * Creating and testing feature components as well as ensuring software quality through unit and system-level testing.\n     * Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests.\n     * Utilising paired programming and other practices for frequent code review.\n     * Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment.\n     * Applying best practices in coding, design, and implementation to build high-quality components and solutions.\n     * Leveraging team expertise while sharing knowledge for the team's future benefit."
    },
    "analysis": {
        "profile_classification": {
            "profile": "Ambiguous",
            "rationale": "The job description focuses heavily on traditional C++ software engineering tasks, including design, development, testing, and maintenance of existing software. While it mentions research and prototyping, there is no mention of AI, machine learning, generative models, or related technologies. The responsibilities are centered around software development lifecycle and collaboration, not AI-specific engineering."
        },
        "thematic_analysis": {
            "job_tasks": [
                {
                    "category": "TASK4: Software Development",
                    "justification": "The core responsibilities involve designing, developing, modifying, and maintaining software, creating and testing feature components, and applying best practices in coding, design, and implementation. This aligns directly with traditional software engineering.",
                    "phrase": "Designing, developing, modifying, and maintaining NX CAM software"
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Activities like research, design, and prototyping are foundational to software development, especially in creating new features or improving existing ones.",
                    "phrase": "Conducting research, design, prototyping, and other exploratory activities"
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Creating and testing feature components, along with ensuring software quality through unit and system-level testing, are standard software development practices.",
                    "phrase": "Creating and testing feature components as well as ensuring software quality through unit and system-level testing"
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "justification": "Collaborating with a Product Owner to build and refine user stories and acceptance tests involves understanding business needs and translating them into technical requirements, which is a key aspect of collaboration.",
                    "phrase": "Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests"
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "justification": "Utilising paired programming and frequent code review implies close collaboration and knowledge sharing within the development team.",
                    "phrase": "Utilising paired programming and other practices for frequent code review"
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "justification": "Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment are core communication and collaboration skills.",
                    "phrase": "Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment"
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Applying best practices in coding, design, and implementation is fundamental to building high-quality software components and solutions.",
                    "phrase": "Applying best practices in coding, design, and implementation to build high-quality components and solutions"
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "justification": "Leveraging team expertise while sharing knowledge for the team's future benefit demonstrates strong collaboration and knowledge transfer skills.",
                    "phrase": "Leveraging team expertise while sharing knowledge for the team's future benefit"
                }
            ],
            "soft_skills": [
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests"
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Utilising paired programming and other practices for frequent code review"
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment"
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Leveraging team expertise while sharing knowledge for the team's future benefit"
                }
            ],
            "technologies": []
        }
    }
}