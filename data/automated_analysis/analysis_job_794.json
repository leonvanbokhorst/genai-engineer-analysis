{
    "job_id": 794,
    "job_details": {
        "job_id": 794,
        "Organisatienaam": "Siemens",
        "Type adverteerder": "Directe werkgever",
        "Vacaturetitel": "C++ Software Engineer - Automation & AI",
        "Standplaats": "Hengelo",
        "Vacaturelink (origineel)": "nationalmssociety.org",
        "Contactpersoon": null,
        "Telefoonnummer": null,
        "E-mail": null,
        "Beroep": "Programmeur C, C++ (m/v/x)",
        "Opleidingsniveau": "WO",
        "Jobfeed feedbacklink": "Meld fout",
        "Functieomschrijving": "* Designing, developing, modifying, and maintaining NX CAM software.\n     * Conducting research, design, prototyping, and other exploratory activities.\n     * Creating and testing feature components as well as ensuring software quality through unit and system-level testing.\n     * Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests.\n     * Utilising paired programming and other practices for frequent code review.\n     * Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment.\n     * Applying best practices in coding, design, and implementation to build high-quality components and solutions.\n     * Leveraging team expertise while sharing knowledge for the team's future benefit.",
        "Datum gevonden": "2024-11-19",
        "Beroepsgroep": "Programmeurs",
        "Beroepsklasse": "Informatie- en communicatietechnologie",
        "Contracttype": "Vast contract",
        "Parttime / fulltime": "Fulltime (> 32 uur)",
        "Branche": "Industrie / Techniek",
        "Organisatiegrootte": "1000+",
        "Jaar (van datum gevonden)": 2024,
        "Maand (van datum gevonden)": 11,
        "full_text": "C++ Software Engineer - Automation & AI\n\n* Designing, developing, modifying, and maintaining NX CAM software.\n     * Conducting research, design, prototyping, and other exploratory activities.\n     * Creating and testing feature components as well as ensuring software quality through unit and system-level testing.\n     * Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests.\n     * Utilising paired programming and other practices for frequent code review.\n     * Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment.\n     * Applying best practices in coding, design, and implementation to build high-quality components and solutions.\n     * Leveraging team expertise while sharing knowledge for the team's future benefit."
    },
    "analysis": {
        "profile_classification": {
            "profile": "Ambiguous",
            "rationale": "The job description focuses heavily on traditional C++ software engineering tasks, including design, development, testing, and maintenance of existing software (NX CAM). While it mentions 'AI' in the title, the core responsibilities and listed activities do not involve the development, fine-tuning, or deployment of AI models, nor do they utilize AI-specific frameworks or technologies. The role appears to be a traditional software engineering position that may integrate with AI tools or systems, but the primary focus is not on AI development itself. Therefore, it does not fit the profiles of ML Engineer or GenAI Engineer."
        },
        "thematic_analysis": {
            "job_tasks": [
                {
                    "category": "TASK4: Software Development",
                    "justification": "The description details core software engineering activities such as designing, developing, modifying, and maintaining software (NX CAM), creating and testing feature components, and applying best practices in coding, design, and implementation.",
                    "phrase": "Designing, developing, modifying, and maintaining NX CAM software."
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Activities like research, design, and prototyping are fundamental to the software development lifecycle.",
                    "phrase": "Conducting research, design, prototyping, and other exploratory activities."
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Creating and testing software components, along with ensuring quality through unit and system-level testing, are standard software development practices.",
                    "phrase": "Creating and testing feature components as well as ensuring software quality through unit and system-level testing."
                },
                {
                    "category": "TASK1: Business Understanding",
                    "justification": "Collaborating with a Product Owner to build and refine user stories and acceptance tests indicates an understanding of business requirements and translating them into technical tasks.",
                    "phrase": "Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests."
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Paired programming and frequent code review are practices aimed at improving code quality and design within the software development process.",
                    "phrase": "Utilising paired programming and other practices for frequent code review."
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "justification": "Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment are key aspects of team collaboration and communication.",
                    "phrase": "Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment."
                },
                {
                    "category": "TASK4: Software Development",
                    "justification": "Applying best practices in coding, design, and implementation directly relates to building high-quality software components and solutions.",
                    "phrase": "Applying best practices in coding, design, and implementation to build high-quality components and solutions."
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "justification": "Leveraging team expertise while sharing knowledge for the team's future benefit highlights collaborative learning and knowledge sharing within a team.",
                    "phrase": "Leveraging team expertise while sharing knowledge for the team's future benefit."
                }
            ],
            "soft_skills": [
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Collaborating with and supporting the Product Owner in building and refining user stories and acceptance tests."
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Utilising paired programming and other practices for frequent code review."
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Maintaining continuous communication to set shared expectations and fostering a transparent and safe environment."
                },
                {
                    "category": "SKILL1: Communication & Collaboration",
                    "phrase": "Leveraging team expertise while sharing knowledge for the team's future benefit."
                }
            ],
            "technologies": []
        }
    }
}