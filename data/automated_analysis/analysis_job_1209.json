{
    "job_id": 1209,
    "job_details": {
        "job_id": 1209,
        "Organisatienaam": "ING Bank N.V.",
        "Type adverteerder": "Directe werkgever",
        "Vacaturetitel": "Lead Dev Engineer - Java",
        "Standplaats": "Amsterdam",
        "Vacaturelink (origineel)": "glassdoor.nl",
        "Contactpersoon": null,
        "Telefoonnummer": null,
        "E-mail": null,
        "Beroep": "R&D ingenieur (m/v/x)",
        "Opleidingsniveau": "WO",
        "Jobfeed feedbacklink": "Meld fout",
        "Functieomschrijving": "We are looking for an experienced, communicative DEV Engineer to strengthen us in Credit Risk. We are looking for engineers who can push us to the next architectural design of our credit risk program. This means thinking about, trying out and applying this new architecture. In this chapter we deal with big data which needs to be validated, processed (apply calculations) and loaded into systems for further processing.\n\n   Who are we?\n\n   COO Risk and Finance delivers baseline and change activities for both Risk and Finance. Our vision and purpose for COO Risk and Finance is clear: To deliver best in class data, insights and advice which empower our consumers to control, explain, predict and optimise the performance of ING. We play a critical role at ING and will be the go-to function for all kinds of data across the Bank.\n\n   Your main focus\n     * Build and maintain new ETL solutions and calculation engines.\n     * Implement a new architecture to deliver data to the Credit Risk Datawarehouse applications.\n     * Improving stability, performance, and reliability of the Credit Risk applications.\n     * Whatever software you develop, you own it and support it in the full lifecycle of your product.\n     * A bank is based on trust of their customers. Therefore, your software requires to be trustworthy and you are keen to be the best in class to learn and apply security standards.\n     * Build scalable deployment pipelines, to support Continuous Integration and Continuous Delivery.\n     * Automate test and make it part of the design, code, build and release process.\n     * Own your product and know how your product(s) are performing implementing the required Observability/Monitoring.\n\n   In addition to developing software solutions, you will contribute to:\n     * We expect you to share and teach your knowledge to other team members as well.\n     * Optimization of the service stability and continuity.\n     * Help Credit Risk to make big steps to the future. Enhance the CI/CD maturity, move to a containerized environment, prepare for the move to the public cloud etc.\n     * In short, we expect you to have or help us have a vision on how to provide our services in the future., You will work in the TECH organization of COO Risk and Finance. You will be part of the Vortex team delivering IT solutions and services for the Credit Risk Tribe. The Vortex teams operate according to the Scrum Agile development process. The focus is on high-quality secure-critical software delivered in time. The key development technology used in your squad are Java, Oracle 19, Linux, and Kafka. The Azure DevOps is the single solution used for version control, build, release etc.",
        "Datum gevonden": "2024-08-01",
        "Beroepsgroep": "Bedrijfskundig ingenieurs en deskundigen",
        "Beroepsklasse": "Engineering",
        "Contracttype": "Vast contract",
        "Parttime / fulltime": "Fulltime (> 32 uur)",
        "Branche": "Financieel / Verzekeringen",
        "Organisatiegrootte": "1000+",
        "Jaar (van datum gevonden)": 2024,
        "Maand (van datum gevonden)": 8,
        "full_text": "Lead Dev Engineer - Java\n\nWe are looking for an experienced, communicative DEV Engineer to strengthen us in Credit Risk. We are looking for engineers who can push us to the next architectural design of our credit risk program. This means thinking about, trying out and applying this new architecture. In this chapter we deal with big data which needs to be validated, processed (apply calculations) and loaded into systems for further processing.\n\n   Who are we?\n\n   COO Risk and Finance delivers baseline and change activities for both Risk and Finance. Our vision and purpose for COO Risk and Finance is clear: To deliver best in class data, insights and advice which empower our consumers to control, explain, predict and optimise the performance of ING. We play a critical role at ING and will be the go-to function for all kinds of data across the Bank.\n\n   Your main focus\n     * Build and maintain new ETL solutions and calculation engines.\n     * Implement a new architecture to deliver data to the Credit Risk Datawarehouse applications.\n     * Improving stability, performance, and reliability of the Credit Risk applications.\n     * Whatever software you develop, you own it and support it in the full lifecycle of your product.\n     * A bank is based on trust of their customers. Therefore, your software requires to be trustworthy and you are keen to be the best in class to learn and apply security standards.\n     * Build scalable deployment pipelines, to support Continuous Integration and Continuous Delivery.\n     * Automate test and make it part of the design, code, build and release process.\n     * Own your product and know how your product(s) are performing implementing the required Observability/Monitoring.\n\n   In addition to developing software solutions, you will contribute to:\n     * We expect you to share and teach your knowledge to other team members as well.\n     * Optimization of the service stability and continuity.\n     * Help Credit Risk to make big steps to the future. Enhance the CI/CD maturity, move to a containerized environment, prepare for the move to the public cloud etc.\n     * In short, we expect you to have or help us have a vision on how to provide our services in the future., You will work in the TECH organization of COO Risk and Finance. You will be part of the Vortex team delivering IT solutions and services for the Credit Risk Tribe. The Vortex teams operate according to the Scrum Agile development process. The focus is on high-quality secure-critical software delivered in time. The key development technology used in your squad are Java, Oracle 19, Linux, and Kafka. The Azure DevOps is the single solution used for version control, build, release etc."
    },
    "analysis": {
        "job_profile_classification": {
            "profile": "`Ambiguous / Not Relevant`",
            "confidence_score": 2,
            "rationale": "The job description focuses heavily on traditional software engineering, data engineering, and MLOps within a banking context, using Java and related technologies. While it mentions 'big data' and 'calculations', there is no explicit mention of machine learning, generative AI, or predictive modeling techniques, which are central to ML Engineer and GenAI Engineer profiles."
        },
        "thematic_analysis": {
            "job_tasks": [
                {
                    "phrase": "Build and maintain new ETL solutions and calculation engines.",
                    "category": "TASK2: Data Engineering",
                    "justification": "ETL (Extract, Transform, Load) solutions and calculation engines are core components of data engineering, involving data movement and transformation."
                },
                {
                    "phrase": "Implement a new architecture to deliver data to the Credit Risk Datawarehouse applications.",
                    "category": "TASK2: Data Engineering",
                    "justification": "This task involves designing and implementing systems for data delivery and warehousing, which falls under data engineering."
                },
                {
                    "phrase": "Improving stability, performance, and reliability of the Credit Risk applications.",
                    "category": "TASK4: Software Development",
                    "justification": "Focusing on application stability, performance, and reliability is a key aspect of software development and maintenance."
                },
                {
                    "phrase": "Whatever software you develop, you own it and support it in the full lifecycle of your product.",
                    "category": "TASK4: Software Development",
                    "justification": "This phrase emphasizes ownership and full lifecycle support of developed software, a common responsibility in software development roles."
                },
                {
                    "phrase": "your software requires to be trustworthy and you are keen to be the best in class to learn and apply security standards.",
                    "category": "TASK4: Software Development",
                    "justification": "Ensuring software trustworthiness and applying security standards are critical aspects of secure software development."
                },
                {
                    "phrase": "Build scalable deployment pipelines, to support Continuous Integration and Continuous Delivery.",
                    "category": "TASK5: Operations Engineering (MLOps)",
                    "justification": "Building deployment pipelines for CI/CD is a core MLOps/DevOps practice."
                },
                {
                    "phrase": "Automate test and make it part of the design, code, build and release process.",
                    "category": "TASK5: Operations Engineering (MLOps)",
                    "justification": "Automating testing throughout the software development lifecycle (design, code, build, release) is a key MLOps/DevOps principle."
                },
                {
                    "phrase": "Own your product and know how your product(s) are performing implementing the required Observability/Monitoring.",
                    "category": "TASK5: Operations Engineering (MLOps)",
                    "justification": "Product ownership and implementing observability/monitoring are crucial for production system maintenance and MLOps."
                },
                {
                    "phrase": "Optimization of the service stability and continuity.",
                    "category": "TASK4: Software Development",
                    "justification": "Ensuring service stability and continuity is a responsibility within software development and operations."
                },
                {
                    "phrase": "Enhance the CI/CD maturity, move to a containerized environment, prepare for the move to the public cloud etc.",
                    "category": "TASK5: Operations Engineering (MLOps)",
                    "justification": "Improving CI/CD maturity, containerization, and cloud migration are all key aspects of modern operations engineering and MLOps."
                },
                {
                    "phrase": "The focus is on high-quality secure-critical software delivered in time.",
                    "category": "TASK4: Software Development",
                    "justification": "This highlights the focus on developing high-quality, secure, and timely software, a core tenet of software engineering."
                },
                {
                    "phrase": "We are looking for engineers who can push us to the next architectural design of our credit risk program. This means thinking about, trying out and applying this new architecture.",
                    "category": "TASK4: Software Development",
                    "justification": "This involves architectural design and implementation, a significant part of software engineering."
                },
                {
                    "phrase": "In this chapter we deal with big data which needs to be validated, processed (apply calculations) and loaded into systems for further processing.",
                    "category": "TASK2: Data Engineering",
                    "justification": "Handling 'big data' for validation, processing (calculations), and loading is a data engineering task."
                },
                {
                    "phrase": "We expect you to share and teach your knowledge to other team members as well.",
                    "category": "SKILL1: Communication & Collaboration",
                    "justification": "Sharing and teaching knowledge to team members is a form of communication and collaboration."
                }
            ],
            "technologies": [
                {
                    "phrase": "Java",
                    "category": "TECH1: Programming Languages"
                },
                {
                    "phrase": "Oracle 19",
                    "category": "TECH9: Data Storage"
                },
                {
                    "phrase": "Linux",
                    "category": "TECH1: Programming Languages"
                },
                {
                    "phrase": "Kafka",
                    "category": "TECH6: MLOps & Data Pipelines"
                },
                {
                    "phrase": "Azure DevOps",
                    "category": "TECH6: MLOps & Data Pipelines"
                }
            ],
            "soft_skills": [
                {
                    "phrase": "communicative",
                    "category": "SKILL1: Communication & Collaboration"
                },
                {
                    "phrase": "thinking about, trying out and applying this new architecture",
                    "category": "SKILL3: Problem Solving & Pragmatism"
                },
                {
                    "phrase": "you own it and support it in the full lifecycle of your product",
                    "category": "SKILL5: Innovation & Ownership"
                },
                {
                    "phrase": "keen to be the best in class to learn and apply security standards",
                    "category": "SKILL2: Learning & Adaptability"
                },
                {
                    "phrase": "Automate test and make it part of the design, code, build and release process.",
                    "category": "SKILL3: Problem Solving & Pragmatism"
                },
                {
                    "phrase": "Own your product and know how your product(s) are performing implementing the required Observability/Monitoring.",
                    "category": "SKILL5: Innovation & Ownership"
                },
                {
                    "phrase": "Optimization of the service stability and continuity.",
                    "category": "SKILL3: Problem Solving & Pragmatism"
                },
                {
                    "phrase": "Enhance the CI/CD maturity, move to a containerized environment, prepare for the move to the public cloud etc.",
                    "category": "SKILL2: Learning & Adaptability"
                },
                {
                    "phrase": "have or help us have a vision on how to provide our services in the future.",
                    "category": "SKILL5: Innovation & Ownership"
                },
                {
                    "phrase": "Scrum Agile development process",
                    "category": "SKILL1: Communication & Collaboration"
                },
                {
                    "phrase": "high-quality secure-critical software delivered in time",
                    "category": "SKILL3: Problem Solving & Pragmatism"
                }
            ]
        }
    }
}